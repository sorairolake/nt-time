name: CI

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
  pull_request:
  schedule:
      - cron: '0 0 * * 0'

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-apple-darwin
          - x86_64-pc-windows-msvc
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-22.04
          - target: x86_64-apple-darwin
            os: macos-12
          - target: x86_64-pc-windows-msvc
            os: windows-2022
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1.0.7
      with:
        toolchain: 1.63.0 # MSRV
        target: ${{ matrix.target }}
        override: true
        profile: minimal
    - name: Build a package
      uses: actions-rs/cargo@v1.0.3
      with:
        command: build
        args: --target ${{ matrix.target }}
    - name: Build a package (all features)
      uses: actions-rs/cargo@v1.0.3
      with:
        command: build
        args: --target ${{ matrix.target }} --all-features
    - name: Build a package (no default features)
      uses: actions-rs/cargo@v1.0.3
      with:
        command: build
        args: --target ${{ matrix.target }} --no-default-features
    - name: Run tests
      uses: actions-rs/cargo@v1.0.3
      with:
        command: test
        args: --target ${{ matrix.target }}
    - name: Run tests (all features)
      uses: actions-rs/cargo@v1.0.3
      with:
        command: test
        args: --target ${{ matrix.target }} --all-features
    - name: Run tests (no default features)
      uses: actions-rs/cargo@v1.0.3
      with:
        command: test
        args: --target ${{ matrix.target }} --no-default-features

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1.0.7
      with:
        toolchain: stable
        override: true
        profile: minimal
        components: rustfmt
    - name: Check code formatted
      uses: actions-rs/cargo@v1.0.3
      with:
        command: fmt
        args: -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1.0.7
      with:
        toolchain: stable
        override: true
        profile: minimal
        components: clippy
    - name: Check no lint warnings
      uses: actions-rs/cargo@v1.0.3
      with:
        command: clippy
        args: -- -D warnings
    - name: Check no lint warnings (all features)
      uses: actions-rs/cargo@v1.0.3
      with:
        command: clippy
        args: --all-features -- -D warnings
    - name: Check no lint warnings (no default features)
      uses: actions-rs/cargo@v1.0.3
      with:
        command: clippy
        args: --no-default-features -- -D warnings
